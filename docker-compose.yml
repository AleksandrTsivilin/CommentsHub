version: '3.5'

networks:
  myNetwork:
    driver: bridge
    name: myNetwork

services:
  client: 
    image: aleksandr751/commentshub-client:v-1
    container_name: comments-client
    environment:
      REACT_APP_API_PORT: ${API_PORT:-8000}
    ports:
      - 3000:3000
    depends_on:
      api:
        condition: service_healthy 
    networks:
      - myNetwork
    restart: unless-stopped

  api: 
    image: aleksandr751/commentshub-api:v-1
    container_name: comments-api
    environment:      
      NODE_ENV: docker
      DB_PASSWORD: ${DB_PASSWORD:-admin}
      DB_USERNAME: ${DB_USERNAME:-admin}
      DB_HOST: postgres
      DB_NAME: ${DB_NAME:-CommentsDB} 
      DB_PORT: ${DB_PORT:-5432}
      PORT: ${API_PORT:-8000}
      TOKEN_SECRET_KEY: ${TOKEN_SECRET_KEY:-secret}
      
    ports:
      - ${API_PORT:-8000}:${API_PORT:-8000}
    depends_on:
      postgres: 
        condition: service_healthy 
    networks:
      - myNetwork
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://api:${API_PORT:-8000}"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    volumes:
      - static_data:/app/static

  postgres:
    image: 'postgres'
    container_name: postgresDB
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD:-admin}
      POSTGRES_USER: ${DB_USERNAME:-admin}
      POSTGRES_DB: ${DB_NAME:-CommentsDB}
    ports:
      - ${DB_PORT:-5432}:${DB_PORT:-5432}
    networks:
    - myNetwork
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DB_NAME:-CommentsDB} -U ${DB_USERNAME:-admin}"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  static_data:
  postgres_data:
    