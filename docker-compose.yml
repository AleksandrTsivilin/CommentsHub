version: '3.5'

networks:
  myNetwork:
    driver: bridge
    name: myNetwork


services:
  client: 
    image: aleksandr751/commentshub-client:v-1
    container_name: comments-client
    ports:
      - 3000:3000
    depends_on:
      api: 
        condition: service_healthy 
    networks:
      - myNetwork
    restart: unless-stopped

  api: 
    image: aleksandr751/commentshub-api:v-1
    container_name: comments-api
    environment:
      
      DB_PASSWORD: ${DB_PASSWORD}
      DB_USERNAME: ${DB_USERNAME}
      DB_HOST: postgres
      DB_NAME: ${DB_NAME} 
      DB_PORT: 5432
      PORT: 8000
      TOKEN_SECRET_KEY: ${TOKEN_SECRET_KEY}
      
    ports:
      - "8000:8000"
    depends_on:
      postgres: 
        condition: service_healthy 
    networks:
      - myNetwork
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://api:8000"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    volumes:
      - ./static:/app/server/static

  postgres:
    image: 'postgres'
    container_name: postgresDB
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - '5432:5432'
    networks:
    - myNetwork
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DB_NAME} -U ${DB_USERNAME}"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    volumes:
      - '/app/data/postgres:/var/lib/postgresql/data'
    